name: Test all releases

on:
  pull_request:
  push:
    branches:
      - main
      - ci
      - "releases/*"

jobs:
  # Run this Action with all GCC versions, in all OS, and build a simple STM32 project
  test-all-releases:
    strategy:
      fail-fast: false
      matrix:
        # macOS 13 runner is x86_64 and macOS 14 runner is arm64
        os: [ubuntu-22.04, ubuntu-22.04-arm, macos-13, macos-14, windows-latest]
        release:
          - "latest"
          - "14.2.Rel1"
          - "13.3.Rel1"
          - "13.2.Rel1"
          - "12.3.Rel1"
          - "12.2.Rel1"
    name: ${{ matrix.release }} @ ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      # - run: node -e "console.log(process.platform, process.arch)"
      - name: Ensure the compiler is not present (Unix)
        if: runner.os != 'Windows'
        run: "! aarch64-none-elf-gcc --version"
      - name: Set up GCC Arm Compiler
        uses: ./
        with:
          release: ${{ matrix.release }}
      - name: Print out programs invoked by the compiler
        run: aarch64-none-elf-gcc -v
      - name: Print out version
        run: aarch64-none-elf-gcc --version
      - name: Check the version matches
        if: |
          (!(matrix.release == '12.2.Rel1' && contains(matrix.os, 'macos'))
           && !contains(matrix.release, '2013') && !contains(matrix.release, '2014')
           && !contains(matrix.release, '2015') && !contains(matrix.release, '2016')
           && (matrix.release != 'latest'))
        run: aarch64-none-elf-gcc --version | grep -qi ${{ matrix.release }}
